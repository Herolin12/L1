Shape: tensor -> {| return tensor.shape |}
ResizeBilinear: _ -> {| return tf.image.resizeBilinear |}
MaxPool: config -> {|
    return registerFunction({
        description = {
            config: {
                tensor: "The input tensor, of rank 4 or rank 3 of shape [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.",
                filterSize: "The filter size, a tuple [filterHeight, filterWidth]",
                stride: "The strides of the pooling: [strideHeight, strideWidth]"
            }
        },
        implementation = tf.maxPool(config.tensor, config.filterSize, config.strides, "same")
    })
|}

const FUNCTIONS = []

registerFunction: (name, config, implementation) => {
    FUNCTIONS[name] = { config, implementation }
    return implementation
}
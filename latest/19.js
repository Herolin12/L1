(this.webpackJsonp=this.webpackJsonp||[]).push([[19],{574:function(n,t){n.exports="_Data: {\n    target:  RandomNormal {\n        shape: [20 20]\n    } -> (x => x^2 + x + 3)\n}\n\n_Model: {\n    $prediction: RandomNormal {\n        shape: [20 20]\n    }\n\n    _predict: x => prediction\n    _loss: predictions => labels =>\n        (predictions - labels)^2\n            -> Mean { axis: [0] }\n            -> Sum\n    _step: y => (loss (predict {})) y\n}\n\n_Optimizer: {\n    _config: {\n        learningRate: 0.3\n        maxIterations: 1000\n        maxTime: 1000\n    }\n    _optimize: StochasticGradientDescent config\n    _loss: a => Model.step Data.target\n    stats: optimize loss\n    mu: Round (Transpose RankUp ((Iota 10) / 10) @ RankUp stats)\n}\n\n::Model.prediction\n::Data.target"}}]);